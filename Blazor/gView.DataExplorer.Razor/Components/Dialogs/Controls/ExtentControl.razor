<MudCard Elevation="2">
    <MudCardContent>
    <MudText Typo="Typo.h6">Extent</MudText>
        <MudGrid Justify="Justify.Center">
            <MudItem xs="4"></MudItem>
            <MudItem xs="4">
                <MudTextField Label="Top" 
                               @bind-Value_="Extent.maxy"
                               Value="Extent.maxy"
                               ValueChanged="async (maxy) => { Extent.maxy = maxy; await OnExtentChanged(); }"
                               Format="#.00000" Culture="@_en" T="double" Immediate="false"
                               InputType="InputType.Number" Step="0.1"
                               Variant="Variant.Text"></MudTextField>
            </MudItem>
            <MudItem xs="4"></MudItem>

                <MudItem xs="1"></MudItem>
                <MudItem xs="4">
                    <MudTextField Label="Left"
                                  @bind-Value_="Extent.minx"
                                  Value="Extent.minx"
                                  ValueChanged="async (minx) => { Extent.minx = minx; await OnExtentChanged(); }"
                                  Format="#.00000" Culture="@_en" T="double" Immediate="false"
                                  InputType="InputType.Number" Step="0.1"
                                  Variant="Variant.Text"></MudTextField>
                </MudItem>
                <MudItem xs="2"></MudItem>
                <MudItem xs="4">
                    <MudTextField Label="Right" 
                                  @bind-Value_="Extent.maxx"
                                  Value="Extent.maxx"
                                  ValueChanged="async (maxx) => { Extent.maxx = maxx; await OnExtentChanged(); }"
                                  Format="#.00000" Culture="@_en" T="double" Immediate="false"
                                  InputType="InputType.Number" Step="0.1"
                                  Variant="Variant.Text"></MudTextField>
                </MudItem>
                <MudItem xs="1"></MudItem>

            <MudItem xs="4"></MudItem>
            <MudItem xs="4">
                <MudTextField Label="Bottom"
                              @bind-Value_="Extent.miny" 
                              Value="Extent.miny"
                              ValueChanged="async (miny) => { Extent.miny = miny; await OnExtentChanged(); }"
                              Format="#.00000" Culture="@_en" T="double" Immediate="false"
                              InputType="InputType.Number" Step="0.000001"
                              Variant="Variant.Text"></MudTextField>
            </MudItem>
            <MudItem xs="4"></MudItem>
        </MudGrid>
    </MudCardContent>
</MudCard>

@code {
    [Parameter] public IEnvelope Extent { get; set; } = Envelope.Null();
    [Parameter] public EventCallback<IEnvelope> ExtentChanged { get; set; }

    public System.Globalization.CultureInfo _en = System.Globalization.CultureInfo.GetCultureInfo("en-US");

    async private Task OnExtentChanged()
    {
        await ExtentChanged.InvokeAsync(this.Extent);
    }
}