@inject IDialogService DialogService

@code {
    protected void Handle(Action action)
    {
        try
        {
            action.Invoke();
        }
        catch (Exception ex)
        {
            HandleException(ex).Wait();
        }
    }

    async protected Task HandleAsync(Func<Task> actionAsync)
    {
        try
        {
            await actionAsync.Invoke();
        }
        catch (Exception ex)
        {
            await HandleException(ex);
        }
    }

    protected T? HandleFunc<T>(Func<T> func)
    {
        try
        {
            return func.Invoke();
        }
        catch (Exception ex)
        {
            HandleException(ex).Wait();
            return default(T);
        }
    }

    async protected Task<T?> HandleFuncAsync<T>(Func<Task<T>> func)
    {
        try
        {
            return await func.Invoke();
        }
        catch (Exception ex)
        {
            await HandleException(ex);
            return default(T);
        }
    }

    async private Task HandleException(Exception ex)
    {
        //if(ex is ShowDialogException)
        //{
        //    DialogReference? dialog = null;
        //    var parameters = new DialogParameters();
        //    parameters.Add("OnDialogClose", new EventCallback<Blazor.Models.Dialogs.DialogResult>(this, OnDialogClose));

        //    dialog = (await DialogService.ShowAsync(((ShowDialogException)ex).RazorType, "Dialog Title", parameters)) as DialogReference;
        //    //var result = await dialog?.Result;

        //    //if(result != null && !result.Canceled)
        //    //{
        //    //    var data = result.Data;
        //    //}

        //    void OnDialogClose(Blazor.Models.Dialogs.DialogResult data)
        //    {
        //        if(dialog!=null)
        //        {
        //            dialog.Close();
        //        }

        //        ((ShowDialogException)ex).Callback?.Invoke(data.Result);
        //        // Hier können Sie auf die Daten zugreifen, die vom Dialog zurückgegeben wurden
        //    }
        //}
        //else
        {
            bool? result = await DialogService.ShowMessageBox(
                "Error",
                ex.Message);
        }
    }
}